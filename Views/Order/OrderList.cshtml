@* @model List<OrderDetailsModel>
@{
    Layout = "_FacultyLayout";
    ViewData["Title"] = "My Orders";
    var statusFilter = ViewBag.StatusFilter as string;
    var startDate = ViewBag.StartDate as string;
    var endDate = ViewBag.EndDate as string;
    int page = ViewBag.Page;
    int totalPages = ViewBag.TotalPages;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>aLphabet-Connect</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>

    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center p-3 bg-light">
            <h2 class="mb-0">My Orders</h2>
            <div class="flex-grow-1 text-center">
                <h2 class="mb-0" id="currentTime"></h2>
            </div>
        </div>

        <!-- Filters Row -->
        <div class="row g-2 align-items-end p-3 bg-light rounded">
            <div class="col-md-3">
                <label for="statusFilter" class="form-label">Order Status</label>
                <select id="statusFilter" class="form-select" onchange="applyFilters()">
                    <option value="">All Status</option>
                    <option value="Pending" @@(statusFilter= ="Pending" ? "selected" : "" )>Pending</option>
                    <option value="Approved" @@(statusFilter= ="Approved" ? "selected" : "" )>Approved</option>
                    <option value="Rejected" @@(statusFilter= ="Rejected" ? "selected" : "" )>Rejected</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="startDate" class="form-label">Start Date</label>
                <input type="date" id="startDate" class="form-control" value="@startDate" onchange="applyFilters()">
            </div>
            <div class="col-md-3">
                <label for="endDate" class="form-label">End Date</label>
                <input type="date" id="endDate" class="form-control" value="@endDate" onchange="applyFilters()">
            </div>
        </div>

        <!-- Orders Table -->
        <div class="table-responsive mt-3">
            <table class="table table-bordered">
                <thead class="table-primary">
                    <tr>
                        <th></th> <!-- Expand/Collapse -->
                        <th>Order #</th>
                        <th>Customer Name</th>
                        <th>Ordered Date</th>
                        <th>Items Count</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>
                                <button class="btn btn-sm btn-outline-primary toggle-details" data-orderid="@order.OrderId">▼</button>
                            </td>
                            <td>@order.OrderId</td>
                            <td>@order.CustomerName</td>
                            <td>@order.OrderedDate.ToShortDateString()</td>
                            <td>@order.ItemsCount</td>
                            <td>
                                <span class="badge
                                @(order.Status == "Pending" ? "bg-warning" : order.Status == "Approved" ? "bg-success" : "bg-danger")">
                                    @order.Status
                                </span>
                            </td>
                        </tr>

                        <!-- Hidden Order Details Row -->
                        <tr class="order-details d-none" id="details-@order.OrderId">
                            <td colspan="6">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Stock Name</th>
                                            <th>Order Id</th>
                                            <th>Quantity</th>
                                            <th>Status</th>
                                            <th>State</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in order.Items)
                                        {
                                            <tr>
                                                <td>@item.StockName</td>
                                                <td>@item.OrderId</td>
                                                <td>@item.Quantity</td>
                                                <td><span class="badge bg-info">@item.Status</span></td>
                                                <td><span class="badge bg-secondary">@item.State</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav class="mt-3">
            <ul class="pagination justify-content-center">
                @if (page > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = page - 1, status = statusFilter, startDate = startDate, endDate = endDate })">Prev</a>
                    </li>
                }

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == page ? "active" : "")">
                        <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = i, status = statusFilter, startDate = startDate, endDate = endDate })">@i</a>
                    </li>
                }

                @if (page < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = page + 1, status = statusFilter, startDate = startDate, endDate = endDate })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>

    <!-- Bootstrap JS and jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    @section Scripts {
        <script>
            function applyFilters() {
                let status = document.getElementById("statusFilter").value;
                let startDate = document.getElementById("startDate").value;
                let endDate = document.getElementById("endDate").value;
                window.location.href = `@Url.Action("OrderList", "Order")?status=${status}&startDate=${startDate}&endDate=${endDate}`;
            }

            function purchaseStock() {
                window.location.href = `@Url.Action("Index", "Order")`;
            }

            // Expand/Collapse Order Details
            $(document).ready(function () {
                $(".toggle-details").click(function () {
                    var orderId = $(this).data("orderid");
                    $("#details-" + orderId).toggleClass("d-none");
                });
            });

            function updateTime() {
                const now = new Date();
                const options = { weekday: 'long', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true };
                const timeString = now.toLocaleString('en-US', options);
                document.getElementById("currentTime").textContent = timeString;
            }

            setInterval(updateTime, 1000); // Update every second
            updateTime(); // Initialize immediately
        </script>
    }
</body>
</html>

<style>
    .container {
        max-width: 100%;
    }
</style>
 *@

@model List<OrderDetailsModel>
@{
    Layout = "_FacultyLayout";
    ViewData["Title"] = "My Orders";
    var statusFilter = ViewBag.StatusFilter as string;
    var startDate = ViewBag.StartDate as string;
    var endDate = ViewBag.EndDate as string;
    int page = ViewBag.Page;
    int totalPages = ViewBag.TotalPages;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>myaLphabet</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .card {
            border: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        }

        .table thead {
            background-color: #0d6efd;
            color: white;
        }

        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }

        /*  .pagination .page-link {
                    color: #0d6efd;
                }
         */
        .toggle-details.expanded i {
            transform: rotate(180deg);
        }
    </style>
</head>
<body>
    <div class="container-fluid p-4">
        <div class="card mb-4">
            <div class="card-body d-flex justify-content-between align-items-center flex-wrap gap-3">
                <h2 class="mb-0 text-primary fw-bold">
                    <i class="bi bi-receipt-cutoff me-2 fw-bold mb-4" style="color: #004085;"></i>My Orders
                </h2>
                <div class="fs-5 text-muted fw-semibold" id="currentTime"></div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header bg-light fw-bold">
                <i class="bi bi-funnel-fill me-2"></i>Filters
            </div>
            <div class="card-body">
                <div class="row g-3 align-items-end">
                    <div class="col-md-4 col-lg-3">
                        <label for="statusFilter" class="form-label">Order Status</label>
                        <select id="statusFilter" class="form-select">
                            <option value="">All Status</option>
                            <option value="Pending" selected="@(statusFilter == "Pending")">Pending</option>
                            <option value="Approved" selected="@(statusFilter == "Approved")">Approved</option>
                            <option value="Rejected" selected="@(statusFilter == "Rejected")">Rejected</option>
                        </select>
                    </div>
                    <div class="col-md-4 col-lg-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" id="startDate" class="form-control" value="@startDate">
                    </div>
                    <div class="col-md-4 col-lg-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" id="endDate" class="form-control" value="@endDate">
                    </div>
                    <div class="col-lg-3">
                        <button class="btn btn-primary w-100" onclick="applyFilters()">Apply Filters</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="width: 5%;"></th>
                            <th>Order #</th>
                            <th>Customer Name</th>
                            <th>Ordered Date</th>
                            <th>Items Count</th>
                            <th class="text-center">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>
                                    <button class="btn btn-sm btn-outline-secondary rounded-circle toggle-details" data-orderid="@order.OrderId">
                                        <i class="bi bi-chevron-down"></i>
                                    </button>
                                </td>
                                <td>@order.OrderId</td>
                                <td class="fw-semibold">@order.CustomerName</td>
                                <td>@order.OrderedDate.ToString("dd-MMM-yyyy")</td>
                                <td>@order.ItemsCount</td>
                                <td class="text-center">
                                    <span class="badge rounded-pill fs-6
                                          @(order.Status == "Pending" ? "text-bg-warning" : order.Status == "Approved" ? "text-bg-success" : "text-bg-danger")">
                                        @order.Status
                                    </span>
                                </td>
                            </tr>
                            <tr class="order-details d-none" id="details-@order.OrderId">
                                <td colspan="6" class="p-3 bg-light">
                                    <h6 class="mb-2 fw-bold">Items for Order #@order.OrderId</h6>
                                    <table class="table table-sm table-bordered bg-white">
                                        <thead class="table-secondary">
                                            <tr>
                                                <th>Stock Name</th>
                                                <th>Quantity</th>
                                                <th>Status</th>
                                                <th>State</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in order.Items)
                                            {
                                                <tr>
                                                    <td>@item.StockName</td>
                                                    <td>@item.Quantity</td>
                                                    <td><span class="badge bg-info">@item.Status</span></td>
                                                    <td><span class="badge bg-secondary">@item.State</span></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                <li class="page-item @(page == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = page - 1, status = statusFilter, startDate = startDate, endDate = endDate })">&laquo;</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == page ? "active" : "")">
                        <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = i, status = statusFilter, startDate = startDate, endDate = endDate })">@i</a>
                    </li>
                }
                <li class="page-item @(page == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("OrderList", "Order", new { page = page + 1, status = statusFilter, startDate = startDate, endDate = endDate })">&raquo;</a>
                </li>
            </ul>
        </nav>
    </div>
</body>
</html>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function applyFilters() {
            let status = document.getElementById("statusFilter").value;
            let startDate = document.getElementById("startDate").value;
            let endDate = document.getElementById("endDate").value;
            window.location.href = `@Url.Action("OrderList", "Order")?page=1&status=${status}&startDate=${startDate}&endDate=${endDate}`;
        }

        function updateTime() {
            const now = new Date();
            const options = {
                weekday: 'long',
                hour: 'numeric',
                minute: '2-digit',
                second: '2-digit',
                hour12: true,
                timeZone: 'Asia/Kolkata' // For IST
            };
            const timeString = now.toLocaleString('en-US', options);
            const timeEl = document.getElementById("currentTime");
            if (timeEl) {
                timeEl.textContent = timeString;
            }
        }

        $(document).ready(function () {
            // Expand/Collapse Order Details
            $(".toggle-details").click(function () {
                var orderId = $(this).data("orderid");
                $("#details-" + orderId).toggleClass("d-none");
                $(this).toggleClass("expanded"); // For rotating the icon
            });

            // Initialize and update the clock
            setInterval(updateTime, 1000);
            updateTime();
        });
    </script>
}