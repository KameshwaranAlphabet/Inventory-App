@{
    Layout = "_FacultyLayout";
}
@model List<Inventree_App.Models.Stocks>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stock List</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f4f4f4;
            padding: 20px;
        }


        .container {
            max-width: 600px;
            margin-top: 50px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            background: white;
            z-index: 99;
            width: 100%;
            max-height: 200px;
            overflow-y: auto;
        }

            .autocomplete-items div {
                padding: 10px;
                cursor: pointer;
                border-bottom: 1px solid #d4d4d4;
            }

                .autocomplete-items div:hover {
                    background-color: #f1f1f1;
                }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="text-center mb-4">Stock List</h2>
        <label for="stockSearch" class="form-label">Select or Search Stock:</label>
        <div class="position-relative">
            <input type="text" id="stockSearch" class="form-control" placeholder="Search or enter stock..." oninput="filterStocks()" autocomplete="off">
            <div id="autocomplete-list" class="autocomplete-items"></div>
        </div>

        <div class="mt-3">
            <input type="number" id="stockQuantity" class="form-control" value="1" min="1">
        </div>

        <div class="d-grid gap-2 mt-3">
            <button class="btn btn-primary" onclick="addToCart()">Add to Cart</button>
            <a href="/Order/CartItem" class="btn btn-secondary">View Full Cart</a>
        </div>
    </div>

    <script>
        let stocks = [
        @foreach (var stock in Model)
        {
            @: { id: "@stock.Id", name: "@stock.Name" },
        }
        ];

        function filterStocks() {
            let input = document.getElementById("stockSearch");
            let listDiv = document.getElementById("autocomplete-list");
            let searchText = input.value.toLowerCase().trim();
            listDiv.innerHTML = "";
            if (!searchText) return;

            let filteredStocks = stocks.filter(stock => stock.name.toLowerCase().includes(searchText));

            if (filteredStocks.length === 0) {
                let customOption = document.createElement("div");
                customOption.textContent = `Use as custom: "${input.value}"`;
                customOption.style.fontStyle = "italic";
                customOption.onclick = function () {
                    input.dataset.stockId = input.value;
                    listDiv.innerHTML = "";
                };
                listDiv.appendChild(customOption);
            } else {
                filteredStocks.forEach(stock => {
                    let item = document.createElement("div");
                    item.textContent = stock.name;
                    item.onclick = function () {
                        input.value = stock.name;
                        input.dataset.stockId = stock.id;
                        listDiv.innerHTML = "";
                    };
                    listDiv.appendChild(item);
                });
            }
        }

        function addToCart() {
            let input = document.getElementById("stockSearch");
            let stockId = input.dataset.stockId || input.value;
            let quantity = document.getElementById("stockQuantity").value;

            if (!stockId || quantity <= 0) {
                alert("Please select a stock and enter a valid quantity.");
                return;
            }

            fetch("/Order/AddToCart", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ stockId: stockId, quantity: parseInt(quantity) })
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message || "Added to cart");
            })
            .catch(error => console.error("Error:", error));
        }
    </script>
</body>
</html>
