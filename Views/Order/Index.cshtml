@{
    Layout = "_FacultyLayout";
    ViewData["Title"] = "Inventory Overview";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    string currentSearch = ViewBag.CurrentSearch ?? "";
    string currentLocation = ViewBag.CurrentLocation ?? "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>myaLphabet</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        :root {
            --theme-blue: #0d6efd;
            --theme-yellow: #ffc107;
            --light-bg: #f8f9fa;
            --card-shadow: 0 4px 12px rgba(0,0,0,0.08);
            --card-radius: 0.75rem;
        }

        body {
            background-color: var(--light-bg);
        }

        .page-header {
            color: var(--theme-blue);
        }

        .filter-card {
            background-color: #ffffff;
            border-radius: var(--card-radius);
            box-shadow: var(--card-shadow);
            border: none;
        }

        .table-container {
            background-color: #ffffff;
            border-radius: var(--card-radius);
            box-shadow: var(--card-shadow);
            overflow: hidden;
        }

        .table thead {
            background-color: var(--theme-blue);
            color: white;
        }

        .btn-primary {
            background-color: var(--theme-blue);
            border-color: var(--theme-blue);
        }

        .btn-warning {
            background-color: var(--theme-yellow);
            border-color: var(--theme-yellow);
            color: #343a40;
        }

        .pagination .page-item.active .page-link {
            background-color: var(--theme-blue);
            border-color: var(--theme-blue);
            z-index: 3;
        }

        /*  .pagination .page-link {
                    color: var(--theme-blue);
                } */

        .pagination .page-link:hover {
            background-color: #e9ecef;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container-fluid p-4">
        <h2 class="mb-4 fw-bold page-header" style="color: #004085;">📦 Inventory Stocks</h2>

        <div class="card filter-card mb-4">
            <div class="card-body">
                <div class="row g-3 align-items-end">
                    <div class="col-md-6 col-lg-4">
                        <label for="searchBox" class="form-label fw-semibold">Product Name</label>
                        <input type="text" id="searchBox" class="form-control" placeholder="Search product..." value="@currentSearch">
                    </div>
                    <div class="col-md-6 col-lg-3">
                        <label for="locationFilter" class="form-label fw-semibold">Category</label>
                        <select class="form-select" id="locationFilter">
                            <option value="">All Categories</option>
                            @foreach (var location in ViewData["Locations"] as SelectList)
                            {
                                <option value="@location.Value" selected="@(location.Value == currentLocation ? "selected" : null)">@location.Text</option>
                            }
                        </select>
                    </div>
                    <div class="col-lg-2">
                        <button class="btn btn-primary w-100" onclick="applyFilters()">
                            <i class="bi bi-search me-1"></i> Apply
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm border-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-primary">
                        <tr>
                            <th class="ps-3">ID</th>
                            <th>Stock Name</th>
                            <th>Availability</th>
                            <th>Category</th>
                            <th class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Count == 0)
                        {
                            <tr>
                                <td colspan="5" class="text-center text-muted py-5">
                                    <i class="bi bi-info-circle fs-4"></i>
                                    <p class="mb-0 mt-2">No records found matching your criteria.</p>
                                </td>
                            </tr>
                        }
                        else
                        {
                            foreach (var product in Model)
                            {
                                <tr>
                                    <td class="ps-3">@product.ID</td>
                                    <td class="fw-semibold">@product.Name</td>
                                    <td>
                                        @if (product.StockQuantity == 0)
                                        {
                                            <span class="badge rounded-pill text-bg-danger">Out of Stock</span>
                                        }
                                        else
                                        {
                                            <span class="badge rounded-pill text-bg-success">@product.StockQuantity In Stock</span>
                                        }
                                    </td>
                                    <td>@product.StockLocation</td>
                                    <td class="text-center">
                                        <button class="btn btn-sm btn-warning fw-semibold add-to-cart"
                                                data-id="@product.ID"
                                        @(product.StockQuantity == 0 ? "disabled" : "")>
                                            <i class="bi bi-cart-plus-fill me-1"></i> Add to Cart
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>

        @if (Model.Count > 0 && totalPages > 1)
        {
            <nav class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, search = currentSearch, locationId = currentLocation })">&laquo;</a>
                    </li>

                    @{
                        int window = 2;
                        int startPage = Math.Max(1, currentPage - window);
                        int endPage = Math.Min(totalPages, currentPage + window);

                        if (startPage > 1)
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = 1, search = currentSearch, locationId = currentLocation })">1</a></li>
                            if (startPage > 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                        }

                        for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, search = currentSearch, locationId = currentLocation })">@i</a>
                            </li>
                        }

                        if (endPage < totalPages)
                        {
                            if (endPage < totalPages - 1)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", new { page = totalPages, search = currentSearch, locationId = currentLocation })">@totalPages</a></li>
                        }
                    }

                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, search = currentSearch, locationId = currentLocation })">&raquo;</a>
                    </li>
                </ul>
            </nav>
        }

    </div>

    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1055;">
        <div id="toastSuccess" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body fw-semibold">
                    <i class="bi bi-check-circle-fill me-2"></i>Item added to cart!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        </div>
    </div>
</body>
</html>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Persist filter values on page load
            document.getElementById('searchBox').value = '@currentSearch';
            document.getElementById('locationFilter').value = '@currentLocation';

            // Add to Cart button logic
            document.querySelectorAll(".add-to-cart").forEach(button => {
                button.addEventListener("click", function () {
                    let stockId = this.getAttribute("data-id");
                    let quantity = 1;

                    fetch("/Order/AddToCart", {
                        method: 'POST',
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ stockId: stockId, quantity: quantity })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const toastEl = document.getElementById("toastSuccess");
                                const toast = new bootstrap.Toast(toastEl);
                                toast.show();
                            } else {
                                alert(data.message || "Failed to add item to cart.");
                            }
                        })
                        .catch(error => {
                            console.error("Error adding item to cart:", error);
                            alert("An error occurred. Please try again.");
                        });
                });
            });
        });

        function applyFilters() {
            let search = document.getElementById("searchBox").value;
            let location = document.getElementById("locationFilter").value;
            window.location.href = `?page=1&search=${encodeURIComponent(search)}&locationId=${encodeURIComponent(location)}`;
        }

        // Allow pressing Enter to apply filters
        document.getElementById("searchBox").addEventListener("keyup", function (event) {
            if (event.key === "Enter") {
                applyFilters();
            }
        });
    </script>
}