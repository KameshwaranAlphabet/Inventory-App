@{
    Layout = "_FacultyLayout";
}
@model List<Inventree_App.Models.StockViewModel>

@{
    ViewData["Title"] = "Inventory";
    int currentPage = Context.Request.Query.ContainsKey("page") ? int.Parse(Context.Request.Query["page"]) : 1;
    int totalPages = 9; // Change this dynamically based on your data
}

<div class="container mt-4">
    <h2 class="mb-3">Inventory Management</h2>

    <!-- Search and Filter -->
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" id="searchBox" class="form-control" placeholder="Search Product...">
        </div>
        <div class="col-md-4">
            <select class="form-control" id="locationFilter">
                <option value="">Select a Categories</option>
                @foreach (var location in @ViewData["Locations"] as SelectList)
                {
                    <option value="@location.Value">@location.Text</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <button class="btn btn-primary" onclick="applyFilters()">Apply</button>
        </div>
    </div>

    <!-- Product Table -->
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>ID</th>
                    <th>Stock Name</th>
                    <th>Stock Quantity</th>
                    <th>Stock  Categories</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="productTableBody">
                @foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ID</td>
                        <td>@product.Name</td>
                        <td>
                            @if (product.StockQuantity == 0)
                            {
                                <span class="badge bg-danger">Out of Stock</span>
                            }
                            else
                            {
                                <span class="badge bg-success"> @(product.StockQuantity)</span>
                            }
                        </td>
                        <td><span>@product.StockLocation</span></td>
                        <td style="width: 120px;">
                            <div class="input-group input-group-sm" style="max-width: 100px;">
                                <input type="text" class="form-control text-center quantity" value="@(product.StockQuantity > 0 ? 1 : 0)" min="0" max="1" readonly style="width: 40px; padding: 2px 5px;" data-id="@product.ID" @(product.StockQuantity == 0 ? "disabled" : "")>
                            </div>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-primary add-to-cart"
                                    data-id="@product.ID"
                            @(product.StockQuantity == 0 ? "disabled" : "")>
                                Add to Cart
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center">
        <nav>
            <ul class="pagination">
                @if (currentPage > 1)
                {
                    <li class="page-item"><a class="page-link" href="?page=@(currentPage - 1)&search=@Context.Request.Query["search"]&locationId=@Context.Request.Query["locationId"]">&laquo;</a></li>
                }

                <li class="page-item @(currentPage == 1 ? "active" : "")"><a class="page-link" href="?page=1&search=@Context.Request.Query["search"]&locationId=@Context.Request.Query["locationId"]">1</a></li>

                @if (currentPage > 3)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }

                @for (int i = Math.Max(2, currentPage - 1); i <= Math.Min(totalPages - 1, currentPage + 1); i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")"><a class="page-link" href="?page=@i&search=@Context.Request.Query["search"]&locationId=@Context.Request.Query["locationId"]">@i</a></li>
                }

                @if (currentPage < totalPages - 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }

                <li class="page-item @(currentPage == totalPages ? "active" : "")"><a class="page-link" href="?page=@totalPages&search=@Context.Request.Query["search"]&locationId=@Context.Request.Query["locationId"]">@totalPages</a></li>

                @if (currentPage < totalPages)
                {
                    <li class="page-item"><a class="page-link" href="?page=@(currentPage + 1)&search=@Context.Request.Query["search"]&locationId=@Context.Request.Query["locationId"]">&raquo;</a></li>
                }
            </ul>
        </nav>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".add-to-cart").forEach(button => {
            button.addEventListener("click", function () {
                let stockId = this.getAttribute("data-id");
                let quantity = 1;

                fetch("/Order/AddToCart", {
                    method: 'POST',
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ stockId: stockId, quantity: quantity })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Item added to cart!");
                    } else {
                        alert("Failed to add item.");
                    }
                });
            });
        });
    });

    function applyFilters() {
        let search = document.getElementById("searchBox").value;
        let location = document.getElementById("locationFilter").value;
        window.location.href = `?search=${search}&locationId=${location}`;
    }
</script>
<style>
    .container
    {
       max-width:100%;
    }
</style>