@model List<Inventree_App.Models.Stocks>

@{
    ViewData["Title"] = "Inventory Overview";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    int totalItem = ViewBag.TotalItems;
    int pageSize = ViewBag.PageSize;
    string currentFilter = ViewBag.CurrentFilter ?? "all";
    string currentSearch = ViewBag.CurrentSearch ?? "";
}
@{
    Layout = "_ShopKeeperLayout";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory Overview</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <style>

        .container {
            max-width: 100%;
        }

        .progress-bar {
            transition: width 1.5s ease-in-out;
        }

        .bg-danger {
            background: #ff4d4d !important;
        }

        .bg-warning {
            background: #ffb84d !important;
        }

        .bg-success {
            background: #4caf50 !important;
        }
    </style>
</head>
<body class="inventory-layout">
    <div class="container">
        <h2 class="mb-3">📦 Inventory Overview</h2>

        <!-- Filters -->
        <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
            <div class="d-flex flex-wrap gap-2 align-items-center w-100">
                <input type="text" id="searchInput" class="form-control" placeholder="Search stocks..." value="@currentSearch" style="max-width: 250px;">
                <select id="filterDropdown" class="form-select" style="max-width: 200px;">
                    <option value="all" @@(currentFilter= ="all" ? "selected" : "" )>All</option>
                    <option value="red" @@(currentFilter= ="red" ? "selected" : "" )>🔴 Low Stock</option>
                    <option value="orange" @@(currentFilter= ="orange" ? "selected" : "" )>🟠 Medium Stock</option>
                    <option value="green" @@(currentFilter= ="green" ? "selected" : "" )>🟢 High Stock</option>
                </select>
                <button class="btn btn-primary" onclick="applyFilters()">Apply</button>
                <button class="btn btn-success" onclick="window.location.href='@Url.Action("Create", "StoreKeeper")'">Add New</button>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">Download as PDF</button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="downloadPdf('all')">Full List</a></li>
                        <li><a class="dropdown-item" href="#" onclick="downloadPdf('low')">Low Stock Only</a></li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Inventory List -->
        <div class="row g-3">
            @foreach (var item in Model)
            {
                var percentage = (item.Quantity / (float)item.MaxQuantity) * 100;
                var colorClass = percentage < 30 ? "bg-danger" : (percentage < 70 ? "bg-warning" : "bg-success");

                <div class="col-12 col-md-6 col-lg-4">
                    <div class="card shadow-sm p-3 h-100">
                        <div class="row align-items-center mb-2">
                            <div class="col fw-bold text-truncate">
                                📌 @item.Name
                            </div>
                            <div class="col text-end text-muted">
                                <small># @item.SerialNumber</small>
                            </div>
                        </div>

                        <div class="progress mb-2" style="height: 10px;">
                            <div class="progress-bar @colorClass" role="progressbar"
                                 data-percentage="@percentage" style="width: 0%;">
                            </div>
                        </div>

                        <div class="d-flex justify-content-between fw-semibold">
                            <span>@item.Quantity</span>
                            <span>/</span>
                            <span>@item.MaxQuantity</span>
                        </div>

                        <div class="d-flex justify-content-center mt-3 gap-3">
                            <button class="btn btn-warning btn-sm" onclick="window.location.href='@Url.Action("GetStockById", "StoreKeeper", new { id = item.Id })'">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-danger btn-sm" onclick="deleteStock(@item.Id)">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            @if (currentPage > 1)
            {
                <a href="@Url.Action("Inventory", new { page = currentPage - 1, pageSize = pageSize, filter = currentFilter, search = currentSearch })" class="btn btn-secondary">Previous</a>
            }
            <span class="mx-3">Page @currentPage of @totalPages</span>
            @if (currentPage < totalPages)
            {
                <a href="@Url.Action("Inventory", new { page = currentPage + 1, pageSize = pageSize, filter = currentFilter, search = currentSearch })" class="btn btn-secondary">Next</a>
            }
        </div>
    </div>

    <script>
        function updateProgressBars() {
            document.querySelectorAll(".progress-bar").forEach(bar => {
                let finalWidth = bar.getAttribute("data-percentage");
                bar.style.width = "0%";
                bar.style.transition = "width 1.5s ease-in-out";

                setTimeout(() => {
                    bar.style.width = finalWidth + "%";
                }, 200);
            });
        }
        document.addEventListener("DOMContentLoaded", updateProgressBars);

        function downloadPdf(filter) {
            window.location.href = `/Inventory/DownloadPdf?filter=${filter}`;
        }

        function deleteStock(id) {
            if (confirm("Are you sure you want to delete this stock?")) {
                fetch(`/Inventory/Delete/${id}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Failed to delete stock.");
                    }
                }).catch(error => console.error("Error:", error));
            }
        }

        function applyFilters() {
            let searchValue = document.getElementById("searchInput").value;
            let filterValue = document.getElementById("filterDropdown").value;
            window.location.href = `@Url.Action("Inventory")?page=1&pageSize=@pageSize&filter=${filterValue}&search=${searchValue}`;
        }
    </script>
</body>
</html>
