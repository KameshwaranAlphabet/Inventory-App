@model List<Logs>
@{
    Layout = "_ShopKeeperLayout";
}
@{
    int totalStocks = ViewBag.StocksCount;
    int lowStocks = ViewBag.LowStocksCount;
    int availableStocks = ViewBag.AvailableStocks;
    int approveList = ViewBag.Approved;
    int pending = ViewBag.Pending;
    int todayRequest = ViewBag.TodayCount;
    string username = ViewBag.UserName;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/@@phosphor-icons/web"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        body {
            background: #f4f4f4;
        }

        .welcome {
            background: linear-gradient(to right, #ffffff, #ffffff);
            color: #1e1e1e;
            padding: 15px;
            border-radius: 8px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .container {
            max-width: 100%;
        }

        .stats-cards .card {
            color: white;
            transition: transform 0.3s;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px;
        }

            .stats-cards .card:hover {
                transform: scale(1.05);
            }

            .stats-cards .card i {
                font-size: 2rem;
            }

        .green {
            background-color: #38a169;
        }

        .blue {
            background-color: #3182ce;
        }

        .red {
            background-color: #e53e3e;
        }

        .yellow {
            background-color: #dd6b20;
        }
        .approved
        {
            background-color: coral;
        }
        .todayrequest
        {
            background-color: hotpink;
        }
        .filter-dropdown {
            width: 23%;
            background: white;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <div class="welcome">Hi, @username</div>
        <div class="row g-3 stats-cards mt-3">
            <div class="col-md-3" onclick="navigateToDashboard()">
                <div class="card blue">
                    <div>
                        Total Stocks<br><strong>@totalStocks</strong>
                    </div>
                    <i class="ph ph-shopping-cart"></i>
                </div>
            </div>
            <div class="col-md-3" onclick="navigateToAvailabe()">
                <div class="card green">
                    <div>
                        Available Stocks<br><strong>@availableStocks</strong>
                    </div>
                    <i class="ph ph-wallet"></i>
                </div>
            </div>
            <div class="col-md-3" onclick="navigateToLowStock()">
                <div class="card red">
                    <div>
                        Low Stocks<br><strong>@lowStocks</strong>
                    </div>
                    <i class="ph ph-truck"></i>
                </div>
            </div>
            <div class="col-md-3" onclick="navigateToPending()">
                <div class="card yellow">
                    <div>
                        Pending<br><strong>@pending</strong>
                    </div>
                    <i class="ph ph-chart-line"></i>
                </div>
            </div>
            <div class="col-md-3" onclick="navigateToApproved()">
                <div class="card approved">
                    <div>
                        Approved<br><strong>@approveList</strong>
                    </div>
                    <i class="ph ph-chart-line"></i>
                </div>
            </div>
            <div class="col-md-3" onclick="navigateToTodayRequest()">
                <div class="card todayrequest">
                    <div>
                        TodayList<br><strong>@todayRequest</strong>
                    </div>
                    <i class="ph ph-chart-line"></i>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-md-8">
                <div class="card p-3">
                    <div class="d-flex justify-content-between">
                        <h5>Top Buyed Faculty</h5>
                        <select id="monthFilter" class="form-select filter-dropdown">
                            <option value="all">All</option>
                            <option value="01">January</option>
                            <option value="02">February</option>
                            <option value="03">March</option>
                            <option value="04">April</option>
                            <option value="05">May</option>
                            <option value="06">June</option>
                            <option value="07">July</option>
                            <option value="08">August</option>
                            <option value="09">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <table class="table table-striped mt-3">
                        <thead>
                            <tr>
                                <th>Profile</th>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Quantity</th>
                            </tr>
                        </thead>
                        <tbody id="ordersTable"></tbody>
                    </table>
                    <nav>
                        <ul class="pagination justify-content-center" id="pagination"></ul>
                    </nav>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5>Logs</h5>
                        <select id="updateFilter" class="form-select filter-dropdown">
                            <option value="all">All</option>
                            <option value="01">January</option>
                            <option value="02">February</option>
                            <option value="03">March</option>
                            <option value="04">April</option>
                            <option value="05">May</option>
                            <option value="06">June</option>
                            <option value="07">July</option>
                            <option value="08">August</option>
                            <option value="09">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <ul class="list-unstyled mt-3" id="updatesList"></ul>
                    <nav>
                        <ul class="pagination justify-content-center" id="logPagination"></ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script>
     var currentPage = 1;
    var pageSize = 7;

    function fetchOrders(page = 1) {
        var month = $("#monthFilter").val();
        $.get("/Dashboard/GetOrders", { month: month, page: page, pageSize: pageSize }, function (response) {
            console.log("111111",response.data)
               $("#ordersTable").html(response.data.map(o =>
                `<tr>
                    <td>
                        <div style="width: 25px; height: 25px; border-radius: 50%; background-color: ${getColor(o.name)}; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">
                            ${o.profile}
                        </div>
                    </td>
                    <td>${o.name}</td>
                    <td>${new Date(o.date).toLocaleDateString()}</td>
                    <td>${o.quantity}</td>
                </tr>`
            ).join(""));

            // Pagination
            setupPagination(response.totalRecords, page);
        });
    }
        function getInitials(name) {
        let initials = name.split(" ").map(word => word[0]).join("").toUpperCase();
        return initials.substring(0, 2); // Keep it at 2 characters max
    }

    function getColor(name) {
        const colors = ["#4A90E2", "#50E3C2", "#F5A623", "#D0021B", "#BD10E0"];
        let hash = 0;
        for (let i = 0; i < name.length; i++) {
            hash = name.charCodeAt(i) + ((hash << 5) - hash);
        }
        return colors[Math.abs(hash) % colors.length]; // Pick color based on name hash
    }
        function setupPagination(totalRecords, currentPage) {
        var totalPages = Math.ceil(totalRecords / pageSize);
        var paginationHtml = "";

        if (totalPages > 1) {
            paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchOrders(1)">&laquo;</a>
            </li>`;

            if (currentPage > 2) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchOrders(1)">1</a></li>`;
                if (currentPage > 3) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
            }

            let startPage = Math.max(1, currentPage - 1);
            let endPage = Math.min(totalPages, currentPage + 1);

            for (let i = startPage; i <= endPage; i++) {
                paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="fetchOrders(${i})">${i}</a>
                </li>`;
            }

            if (currentPage < totalPages - 1) {
                if (currentPage < totalPages - 2) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchOrders(${totalPages})">${totalPages}</a></li>`;
            }

            paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchOrders(${totalPages})">&raquo;</a>
            </li>`;
        }

        $("#pagination").html(paginationHtml);
    }

    $("#monthFilter").change(function () {
        currentPage = 1;
        fetchOrders(currentPage);
    });

    fetchOrders(currentPage);

    var logPage = 1;
      var logPageSize = 4; // Number of logs per page

      function fetchLogs(page = 1) {
          var month = $("#updateFilter").val();
          $.get("/Dashboard/GetLogs", { month: month, page: page, pageSize: logPageSize }, function (response) {
              $("#updatesList").html(response.data.map(log =>
                  `<li class="mb-2">
                      <strong>${log.userName}</strong><br>
                      ${log.description}<br>
                      <small class="text-muted">${formatTimeAgo(log.createdDate)}</small>
                  </li>`
              ).join(""));

              setupLogPagination(response.totalRecords, page);
          });
      }

      function formatTimeAgo(dateString) {
          let date = new Date(dateString);
          let now = new Date();
          let seconds = Math.floor((now - date) / 1000);
          let minutes = Math.floor(seconds / 60);
          let hours = Math.floor(minutes / 60);
          let days = Math.floor(hours / 24);

          if (seconds < 60) return "Just now";
          if (minutes < 60) return `${minutes} min ago`;
          if (hours < 24) return `${hours} hour${hours > 1 ? 's' : ''} ago`;
          if (days === 1) return "Yesterday";
          return `${days} days ago`;
      }
    function setupLogPagination(totalRecords, currentPage) {
        var totalPages = Math.ceil(totalRecords / logPageSize);
        var paginationHtml = "";

        if (totalPages > 1) {
            paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchLogs(1)">&laquo;</a>
            </li>`;

            if (currentPage > 2) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchLogs(1)">1</a></li>`;
                if (currentPage > 3) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
            }

            let startPage = Math.max(1, currentPage - 1);
            let endPage = Math.min(totalPages, currentPage + 1);

            for (let i = startPage; i <= endPage; i++) {
                paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="fetchLogs(${i})">${i}</a>
                </li>`;
            }

            if (currentPage < totalPages - 1) {
                if (currentPage < totalPages - 2) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchLogs(${totalPages})">${totalPages}</a></li>`;
            }

            paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchLogs(${totalPages})">&raquo;</a>
            </li>`;
        }

        $("#logPagination").html(paginationHtml);
    }
      $("#updateFilter").change(function () {
          logPage = 1;
          fetchLogs(logPage);
      });

      fetchLogs(logPage);

      function navigateToDashboard() {
        const url = `/StoreKeeper/Inventory?page=${1}&pageSize=${10}&filter=${"All"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToAvailabe() {
        const url = `/StoreKeeper/Inventory?page=${1}&pageSize=${10}&filter=${"Available"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToLowStock(){
        const url = `/StoreKeeper/Inventory?page=${1}&pageSize=${10}&filter=${"red"}&search=${""}`;
        window.location.href = url;
    }
    function navigateToPending(){
            const url = `/StoreKeeper/ApproveList?page=${1}&pageSize=${10}&search=${""}&orderDate=${""}&filter=${"Pending"}`;

        window.location.href = url;
    }
     function navigateToApproved(){
            const url = `/StoreKeeper/ApproveList?page=${1}&pageSize=${10}&search=${""}&orderDate=${""}&filter=${"Approved"}`;

        window.location.href = url;
    }
       function navigateToTodayRequest() {
        const today = new Date().toISOString().split('T')[0]; // Format: YYYY-MM-DD
        const url = `/StoreKeeper/ApproveList?page=1&pageSize=10&search=&orderDate=&fromDate=${today}&toDate=${today}`;

        window.location.href = url;
    }

</script>
