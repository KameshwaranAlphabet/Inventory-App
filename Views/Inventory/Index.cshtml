@model List<Inventree_App.Models.Stocks>

@{
    ViewData["Title"] = "Inventory Overview";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    int totalItem = ViewBag.TotalItems;
    int pageSize = ViewBag.PageSize;
    string currentFilter = ViewBag.CurrentFilter ?? "all";
    string currentSearch = ViewBag.CurrentSearch ?? "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>aLphabet-Connect</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/YOUR_KIT_ID.js" crossorigin="anonymous"></script>
    <style>
        .progress-bar {
            transition: width 0.5s ease-in-out;
        }
        .container
        {
            max-width:100%;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="mb-3">📦 Inventory Overview</h2>
        
        <!-- Filters -->
        <div class="d-flex flex-wrap gap-2 align-items-center mb-3">
            <input type="text" id="searchInput" class="form-control" placeholder="Search stocks..." value="@currentSearch" style="max-width: 250px;">
            <select id="filterDropdown" class="form-select" style="max-width: 200px;">
                <option value="all" @@(currentFilter == "all" ? "selected" : "")>All</option>
                <option value="red" @@(currentFilter == "red" ? "selected" : "")>🔴 Low Stock</option>
                <option value="orange" @@(currentFilter == "orange" ? "selected" : "")>🟠 Medium Stock</option>
                <option value="green" @@(currentFilter == "green" ? "selected" : "")>🟢 High Stock</option>
            </select>
            <button class="btn btn-primary" onclick="applyFilters()">Apply</button>
            <button class="btn btn-success" onclick="window.location.href='@Url.Action("Create", "Inventory")'">Add New</button>
            <button class="btn btn-secondary" onclick="window.location.href='@Url.Action("DownloadPdf", "Inventory")'">
                📄 Download Barcode PDF
            </button>

            <!-- Upload CSV Button with Icon -->
            <button class="btn btn-warning" onclick="document.getElementById('csvUploadInput').click()">
                <i class="fas fa-upload"></i> Upload CSV
            </button>
            <form id="csvUploadForm" method="post" enctype="multipart/form-data" action="@Url.Action("UploadCsv", "Inventory")" style="display: none;">
                <input type="file" id="csvUploadInput" name="file" accept=".csv" onchange="document.getElementById('csvUploadForm').submit();">
            </form>
            <form method="post" action="@Url.Action("TriggerExport", "Inventory")">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-file-export"></i> Export Current Data
                </button>
            </form>
        </div>

        <table class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th>ID</th>
                    <th>Product Name</th>
                    <th>Serial Number</th>
                    <th>Unit Quantity</th>
                    <th>QTY</th>
                    <th>Stock Level</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var percentage = ((item.UnitCapacity * item.UnitQuantity + item.Quantity) / (float)item.MaxQuantity) * 100;
                    var colorClass = percentage < 30 ? "bg-danger" : (percentage < 70 ? "bg-warning" : "bg-success");

                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Name</td>
                        <td>@item.SerialNumber</td>
                        <td>@item.UnitQuantity (@item.UnitType)  @item.SubUnitType (@item.Quantity) </td>
                        <td> @(item.UnitCapacity * item.UnitQuantity + item.Quantity) / @item.MaxQuantity </td>
                        <td>
                            <div class="progress" style="height: 10px; min-width: 100px;">
                                <div class="progress-bar @colorClass" role="progressbar" data-percentage="@percentage"></div>
                            </div>
                        </td>
                        <td>
                            <button class="btn btn-primary btn-sm" onclick="window.location.href='@Url.Action("GetStockById", "Inventory", new { id = item.Id })'">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-danger btn-sm" onclick="deleteStock(@item.Id)">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Pagination -->
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center mt-3">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, pageSize = pageSize, filter = currentFilter, search = currentSearch })">&laquo;</a>
                    </li>
                }
                @for (int i = 1; i <= totalPages; i++)
                {
                    if (i == 1 || i == totalPages || (i >= currentPage - 1 && i <= currentPage + 1))
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = pageSize, filter = currentFilter, search = currentSearch })">@i</a>
                        </li>
                    }
                    else if (i == currentPage - 2 || i == currentPage + 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }
                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, pageSize = pageSize, filter = currentFilter, search = currentSearch })">&raquo;</a>
                    </li>
                }
            </ul>
        </nav>
    </div>

    <script>
        function deleteStock(id) {
            if (confirm("Are you sure you want to delete this stock?")) {
                fetch(`/Inventory/Delete/${id}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Failed to delete stock.");
                    }
                }).catch(error => console.error("Error:", error));
            }
        }

        function applyFilters() {
            let searchValue = document.getElementById("searchInput").value;
            let filterValue = document.getElementById("filterDropdown").value;
            window.location.href = `@Url.Action("Index")?page=1&pageSize=@pageSize&filter=${filterValue}&search=${searchValue}`;
        }

        function updateProgressBars() {
            document.querySelectorAll(".progress-bar").forEach(bar => {
                let finalWidth = bar.getAttribute("data-percentage");
                bar.style.width = "0%";
                setTimeout(() => {
                    bar.style.width = finalWidth + "%";
                }, 200);
            });
        }
        document.addEventListener("DOMContentLoaded", updateProgressBars);
    </script>
</body>
</html>
