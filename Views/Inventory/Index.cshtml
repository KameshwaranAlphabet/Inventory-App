@model List<Inventree_App.Models.Stocks>

@{
    ViewData["Title"] = "Inventory Overview";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    int totalItem = ViewBag.TotalItems;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory Overview</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f4f4f4;
            padding: 19px;
            text-align: center;
        }
        .inventory-item {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            border-bottom: 1px solid #ddd;
            font-size: 16px;
            gap: 10px;
        }

        .name {
            flex: 1;
            min-width: 150px;
            text-align: left;
            font-weight: bold;
        }

        .progress-bar {
            flex: 2;
            min-width: 200px;
            height: 14px;
            background: #eee;
            border-radius: 7px;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            height: 100%;
            width: 0%;
            transition: width 1.5s ease-in-out;
        }

        .low { background: #ff4d4d; }
        .medium { background: #ffb84d; }
        .high { background: #4caf50; }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="text-center mb-3">📦 Inventory Overview</h2>
        <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
            <div class="d-flex flex-wrap gap-2 align-items-center w-100">
                <input type="text" id="searchInput" class="form-control" placeholder="Search stocks..." value="@ViewBag.CurrentSearch" style="max-width: 250px;">
                <select id="filterDropdown" class="form-select" style="max-width: 200px;">
                    <option value="all" @@(ViewBag.CurrentFilter == "all" ? "selected" : "")>All</option>
                    <option value="red" @@(ViewBag.CurrentFilter == "red" ? "selected" : "")>🔴 Low Stock</option>
                    <option value="orange" @@(ViewBag.CurrentFilter == "orange" ? "selected" : "")>🟠 Medium Stock</option>
                    <option value="green" @@(ViewBag.CurrentFilter == "green" ? "selected" : "")>🟢 High Stock</option>
                </select>
                <button class="btn btn-primary" onclick="applyFilters()">Apply</button>
                <button class="btn btn-success" onclick="window.location.href='@Url.Action("Create", "Inventory")'">Add New</button>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">Download as PDF</button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="downloadPdf('all')">Full List</a></li>
                        <li><a class="dropdown-item" href="#" onclick="downloadPdf('low')">Low Stock Only</a></li>
                    </ul>
                </div>
            </div>
        </div>

        @foreach (var item in Model)
        {
            var percentage = (item.Quantity / (float)item.MaxQuantity) * 100;
            var colorClass = percentage < 30 ? "low" : (percentage < 70 ? "medium" : "high");
            <div class="inventory-item">
                <span class="name">📌 @item.Name</span>
                <div class="serialNumber"> @item.SerialNumber</div>
                <div class="progress-bar">
                    <div class="progress-fill @colorClass" data-percentage="@percentage"></div>
                </div>
                <div class="details">
                    <span>@item.Quantity</span>
                    <span>/</span>
                    <span>@item.MaxQuantity</span>
                </div>
                <div class="actions">
                    <button class="btn btn-warning" onclick="window.location.href='@Url.Action("GetStockById", "Inventory", new { id = item.Id })'">Edit</button>
                    <button class="btn btn-danger" onclick="deleteStock(@item.Id)">Delete</button>
                </div>
            </div>
        }
    </div>

    <div class="d-flex justify-content-center mt-3">
        <nav>
            <ul class="pagination">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, pageSize = ViewBag.PageSize, filter = ViewBag.CurrentFilter, search = ViewBag.CurrentSearch })">Previous</a>
                    </li>
                }

                <li class="page-item disabled">
                    <span class="page-link">Page @currentPage of @totalPages</span>
                </li>

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, pageSize = ViewBag.PageSize, filter = ViewBag.CurrentFilter, search = ViewBag.CurrentSearch })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function downloadPdf(filter) {
            window.location.href = `/Inventory/DownloadPdf?filter=${filter}`;
        }

        function updateProgressBars() {
            let progressBars = document.querySelectorAll(".progress-fill");
            progressBars.forEach(bar => {
                let finalWidth = bar.getAttribute("data-percentage");
                bar.style.width = "0%";
                setTimeout(() => {
                    bar.style.width = finalWidth + "%";
                }, 100);
            });
        }

        document.addEventListener("DOMContentLoaded", updateProgressBars);

        function deleteStock(id) {
            if (confirm("Are you sure you want to delete this stock?")) {
                fetch(`/Inventory/Delete/${id}`, {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" }
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Failed to delete stock.");
                    }
                }).catch(error => console.error("Error:", error));
            }
        }

        function applyFilters() {
            let searchValue = document.getElementById("searchInput").value;
            let filterValue = document.getElementById("filterDropdown").value;
            window.location.href = `@Url.Action("Index")?page=1&pageSize=@ViewBag.PageSize&filter=${filterValue}&search=${searchValue}`;
        }
    </script>
</body>
</html>
