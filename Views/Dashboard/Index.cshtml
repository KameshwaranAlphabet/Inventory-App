@{
    int totalStocks = ViewBag.StocksCount;
    int lowStocks = ViewBag.LowStocksCount;
    int availableStocks = ViewBag.AvailableStocks;
    int approveList = ViewBag.ApprovedCount;
    int pending = ViewBag.Pending;
    string username = ViewBag.UserName;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>aLphabet-Connect</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/@@phosphor-icons/web"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        body {
            background: #f4f4f4;
        }

        .welcome {
            background: linear-gradient(to right, #ffffff, #ffffff);
            color: #1e1e1e;
            padding: 15px;
            border-radius: 8px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .container
        {
            max-width:100%;
        }
        .stats-cards .card {
            color: white;
            transition: transform 0.3s;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 20px;
        }

            .stats-cards .card:hover {
                transform: scale(1.05);
            }

            .stats-cards .card i {
                font-size: 2rem;
            }

        .green {
            background-color: #38a169;
        }

        .blue {
            background-color: #3182ce;
        }

        .red {
            background-color: #e53e3e;
        }

        .yellow {
            background-color: #dd6b20;
        }

        .filter-dropdown {
            width: 23%;
            background: white;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .icon-circle {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            font-size: 20px;
        }

        .bg-info {
            background-color: #a3c4fd !important; /* Pastel Blue */
            color: #1a3d7c !important; /* Darker text for contrast */
        }

        .bg-success {
            background-color: #A8E6CF !important; /* Soft pastel green */
            color: #2C5E4E !important; /* Darker text for contrast */
        }

        .bg-danger {
            background-color: #F7A8A8 !important; /* Soft pastel red */
            color: #702929 !important; /* Darker text for contrast */
        }

        .bg-warning {
            background-color: #FFF4B2 !important; /* Soft pastel yellow */
            color: #665B31 !important; /* Darker text for contrast */
        }
    </style>
</head>
<body>
    <div class="container py-4">
        <div class="welcome">Hi, @username</div>
        <div class="row g-3 stats-cards mt-3">
            <div class="col-md-3">
                <div class="card text-white bg-info p-3 d-flex flex-row align-items-center" onclick="navigateToDashboard()">
                    <div class="icon-circle bg-white text-primary me-3">
                        <i class="ph ph-shopping-cart"></i>
                    </div>
                    <div>
                        <span>Total Stocks</span><br>
                        <strong class="fs-5">@totalStocks</strong>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card text-white bg-success p-3 d-flex flex-row align-items-center" onclick="navigateToAvailabe()">
                    <div class="icon-circle bg-white text-success me-3">
                        <i class="ph ph-wallet"></i>
                    </div>
                    <div>
                        <span>Available Stocks</span><br>
                        <strong class="fs-5">@availableStocks</strong>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card text-white bg-danger p-3 d-flex flex-row align-items-center" onclick="navigateToLowStock()">
                    <div class="icon-circle bg-white text-danger me-3">
                        <i class="ph ph-trend-down"></i>
                    </div>
                    <div>
                        <span>Low Stocks</span><br>
                        <strong class="fs-5">@lowStocks</strong>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card text-white bg-warning p-3 d-flex flex-row align-items-center" onclick="navigateToPending()">
                    <div class="icon-circle bg-white text-warning me-3">
                        <i class="ph ph-hourglass-simple-medium"></i>
                    </div>
                    <div>
                        <span>Pending</span><br>
                        <strong class="fs-5">@pending</strong>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-md-8">
                <div class="card p-3">
                    <div class="d-flex justify-content-between">
                    <h5>Most Indented</h5>
                        <!-- User Name Search Filter with Smaller Size -->
                        <input type="text" id="userFilter" class="form-control form-control-sm"
                               style="width: 180px;" placeholder="Search User">

                        <select id="monthFilter" class="form-select filter-dropdown">
                            <option value="all">All</option>
                            <option value="1">January</option>
                            <option value="2">February</option>
                            <option value="3">March</option>
                            <option value="4">April</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">August</option>
                            <option value="9">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <table class="table table-striped mt-3">
                        <thead>
                            <tr>
                                <th>Profile</th>
                                <th>Name</th>
                                <th>ItemCount</th>
                                <th>Date</th>
                                <th>TotalQuantity</th>
                            </tr>
                        </thead>
                        <tbody id="ordersTable"></tbody>
                    </table>
                    <nav>
                        <ul class="pagination justify-content-center" id="pagination"></ul>
                    </nav>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5>Logs</h5>

                        <!-- User Name Search Filter with Smaller Size -->
                        <input type="text" id="userFilterlog" class="form-control form-control-sm"
                               style="width: 180px;" placeholder="Search User">

                        <select id="updateFilter" class="form-select filter-dropdown">
                            <option value="all">All</option>
                            <option value="01">January</option>
                            <option value="02">February</option>
                            <option value="03">March</option>
                            <option value="04">April</option>
                            <option value="05">May</option>
                            <option value="06">June</option>
                            <option value="07">July</option>
                            <option value="08">August</option>
                            <option value="09">September</option>
                            <option value="10">October</option>
                            <option value="11">November</option>
                            <option value="12">December</option>
                        </select>
                    </div>
                    <ul class="list-unstyled mt-3" id="updatesList"></ul>
                    <nav>
                        <ul class="pagination justify-content-center" id="logPagination"></ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script>
     var currentPage = 1;
    var pageSize = 7;

      function fetchOrders(page = 1) {
        var month = $("#monthFilter").val();
        var searchUser = $("#userFilter").val().trim(); // Get search input value
        var pageSize = 7; // Set default page size

        $.get("/Dashboard/GetOrders", { month: month, searchUser: searchUser, page: page, pageSize: pageSize }, function (response) {
            var ordersTable = $("#ordersTable");
            ordersTable.empty(); // Clear previous data
            if (response.data.length === 0) {
                ordersTable.append(`<tr><td colspan="5" class="text-center">No records found</td></tr>`);
            } else {
                ordersTable.html(response.data.map(o =>
                    `<tr>
                        <td>
                        <div onclick="redirectToApproveList('${o.orderId}')" style="width: 25px; height: 25px; border-radius: 50%; background-color: ${getColor(o.name)}; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; cursor: pointer;">
                                ${o.profile}
                            </div>
                        </td>
                        <td>${o.name}</td>
                        <td>${o.itemCount}</td>
                        <td>
                            ${new Date(o.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' })}
                            ${new Date(o.date).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true })}
                        </td>                       
                        <td>${o.quantity}</td>
                    </tr>`
                ).join(""));
            }

            // Update Pagination
            setupPagination(response.totalRecords, page, pageSize);
        }).fail(function () {
            console.error("Error fetching orders");
            $("#ordersTable").html(`<tr><td colspan="5" class="text-center text-danger">Error loading data</td></tr>`);
        });
    }

    // Event Listeners for Filters
    $("#monthFilter, #userFilter").on("change keyup", function () {
        fetchOrders(1); // Fetch orders on filter change
    });

    // Initial Load
    fetchOrders();

    
        function getInitials(name) {
        let initials = name.split(" ").map(word => word[0]).join("").toUpperCase();
        return initials.substring(0, 2); // Keep it at 2 characters max
    }

    function getColor(name) {
        const colors = ["#4A90E2", "#50E3C2", "#F5A623", "#D0021B", "#BD10E0"];
        let hash = 0;
        for (let i = 0; i < name.length; i++) {
            hash = name.charCodeAt(i) + ((hash << 5) - hash);
        }
        return colors[Math.abs(hash) % colors.length]; // Pick color based on name hash
    }
        function setupPagination(totalRecords, currentPage) {
        var totalPages = Math.ceil(totalRecords / pageSize);
        var paginationHtml = "";

        if (totalPages > 1) {
            paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchOrders(1)">&laquo;</a>
            </li>`;

            if (currentPage > 2) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchOrders(1)">1</a></li>`;
                if (currentPage > 3) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
            }

            let startPage = Math.max(1, currentPage - 1);
            let endPage = Math.min(totalPages, currentPage + 1);

            for (let i = startPage; i <= endPage; i++) {
                paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="fetchOrders(${i})">${i}</a>
                </li>`;
            }

            if (currentPage < totalPages - 1) {
                if (currentPage < totalPages - 2) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchOrders(${totalPages})">${totalPages}</a></li>`;
            }

            paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchOrders(${totalPages})">&raquo;</a>
            </li>`;
        }

        $("#pagination").html(paginationHtml);
    }

    $("#monthFilter").change(function () {
        currentPage = 1;
        fetchOrders(currentPage);
    });

    fetchOrders(currentPage);

      var logPage = 1;
    var logPageSize = 4;

      function fetchLogs(page = 1) {
        var month = $("#updateFilter").val();
        var searchUser = $("#userFilterlog").val() || "";

        $.get("/Dashboard/GetLogs", { month: month, searchUser: searchUser, page: page, pageSize: logPageSize }, function (response) {
            var ordersTable = $("#updatesList");
            ordersTable.empty(); // Clear previous records

            if (response.data.length === 0) {
                ordersTable.append(`<tr><td colspan="5" class="text-center">No records found</td></tr>`);
            } else {
                ordersTable.html(response.data.map(log =>
                    `<li class="mb-2">
                        <strong>${log.userName}</strong><br>
                        ${log.description}<br>
                        <small class="text-muted">${formatTimeAgo(log.createdDate)}</small>
                    </li>`
                ).join(""));
            }

            setupLogPagination(response.totalRecords, page);
        });
    }

    function formatTimeAgo(dateString) {
        let date = new Date(dateString);
        let now = new Date();
        let seconds = Math.floor((now - date) / 1000);
        let minutes = Math.floor(seconds / 60);
        let hours = Math.floor(minutes / 60);
        let days = Math.floor(hours / 24);

        if (seconds < 60) return "Just now";
        if (minutes < 60) return `${minutes} min ago`;
        if (hours < 24) return `${hours} hour${hours > 1 ? 's' : ''} ago`;
        if (days === 1) return "Yesterday";
        return `${days} days ago`;
    }

    function setupLogPagination(totalRecords, currentPage) {
        var totalPages = Math.ceil(totalRecords / logPageSize);
        var paginationHtml = "";

        if (totalPages > 1) {
            paginationHtml += `<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchLogs(1)">&laquo;</a>
            </li>`;

            if (currentPage > 2) {
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchLogs(1)">1</a></li>`;
                if (currentPage > 3) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
            }

            let startPage = Math.max(1, currentPage - 1);
            let endPage = Math.min(totalPages, currentPage + 1);

            for (let i = startPage; i <= endPage; i++) {
                paginationHtml += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="fetchLogs(${i})">${i}</a>
                </li>`;
            }

            if (currentPage < totalPages - 1) {
                if (currentPage < totalPages - 2) {
                    paginationHtml += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
                }
                paginationHtml += `<li class="page-item"><a class="page-link" href="#" onclick="fetchLogs(${totalPages})">${totalPages}</a></li>`;
            }

            paginationHtml += `<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="fetchLogs(${totalPages})">&raquo;</a>
            </li>`;
        }

        $("#logPagination").html(paginationHtml);
    }

    $("#updateFilter, #userFilterlog").on("change keyup", function () {
        logPage = 1;
        fetchLogs(logPage);
    });

    fetchLogs(logPage);


      function navigateToDashboard() {
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"All"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToAvailabe() {
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"Available"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToLowStock(){
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"red"}&search=${""}`;
        window.location.href = url;
    }
    function navigateToPending(){
            const url = `/Admin/Index?page=${1}&pageSize=${10}&search=${""}&orderDate=${""}&filter=${"Pending"}`;

        window.location.href = url;
    }
    function redirectToApproveList(name) {
           const url = `/Admin/Index?page=${1}&pageSize=${10}&search=${""}&orderDate=${""}&filter=${"Pending"}&orderId=${name}`;
    window.location.href = url;
    }
</script>
