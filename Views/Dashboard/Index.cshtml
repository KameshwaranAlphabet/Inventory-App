
@{
    int totalStocks = ViewBag.StocksCount;
    int lowStocks = ViewBag.LowStocksCount;
    int availableStocks = ViewBag.AvailableStocks;
    int approveList = ViewBag.ApprovedCount;
    int pending = ViewBag.Pending;
}
@{
    int totalPages = (int)Math.Ceiling((double)ViewBag.TotalLogs / ViewBag.PageSize);
    int currentPage = ViewBag.CurrentPage;
    string selectedFilter = ViewBag.FilterType;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <!-- FontAwesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <style>

        body {
            font-family: Arial, sans-serif;
            background: #f4f4f4;
            padding: 19px;
            text-align: center;
        }
        .container {
            max-width: 91%;
            margin: 2%;
            animation: fadeIn 0.8s ease-in-out;
        }

        .notification-container {
            position: fixed;
            top: 7%;
            left: 89%;
            display: inline-block;
            z-index: 1000;
        }
        /* Notification Icon */
        .notification-icon {
            position: relative;
            cursor: pointer;
            font-size: 24px;
            padding: 10px;
            background: #fff;
            border-radius: 50%;
            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.2);
        }
        .notification-dropdown {
            display: none;
            position: absolute;
            top: 40px;
            right: 0;
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            width: 200px;
            z-index: 100;
        }

            .notification-dropdown ul {
                list-style: none;
                padding: 10px;
                margin: 0;
            }

                .notification-dropdown ul li {
                    padding: 10px;
                    border-bottom: 1px solid #ddd;
                    cursor: pointer;
                }

                    .notification-dropdown ul li:hover {
                        background: #f5f5f5;
                    }

        .badge {
            background: red;
            color: white;
            font-size: 12px;
            border-radius: 50%;
            padding: 5px 8px;
            position: absolute;
            top: 0;
            right: 0;
        }

      /*   @@keyframes fadeIn {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        } */

        }

        .search-bar {
            display: flex;
            flex-direction: column;
            gap: 16px;
            margin-bottom: 24px;
        }

            .search-bar input {
                width: 100%;
                padding: 12px;
                border: 1px solid #ddd;
                border-radius: 8px;
                box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
            }

        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 16px;
            margin-bottom: 24px;
        }

        .card {
            padding: 56px;
            border-radius: 8px;
            color: white;
            text-align: center;
            transition: transform 0.3s ease-in-out;
        }

            .card:hover {
                transform: scale(1.05);
            }

        .purple {
            background-color: #6b46c1;
        }

        .green {
            background-color: #38a169;
        }

        .red {
            background-color: red;
        }

        .blue {
            background-color: #3182ce;
        }

        .bonus-section {
            background-color: #6b46c1;
            color: white;
            padding: 24px;
            border-radius: 8px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

            .bonus-section button {
                background-color: white;
                color: #6b46c1;
                padding: 10px 20px;
                border-radius: 8px;
                border: none;
                cursor: pointer;
                transition: background 0.3s;
            }

                .bonus-section button:hover {
                    background-color: #ddd;
                }
    </style>
</head>
<body class="dashboard">
    <div class="container">
      @*   <div class="search-bar">
            <input type="text" placeholder="Search project, folder or file">
        </div> *@
        <!-- Notification Icon -->
       @*  <div class="notification-container">
            <div class="notification-icon" onclick="toggleNotifications()">
                <i class="fas fa-bell"></i>
                <span class="badge" id="notification-count">3</span>
            </div>
            <div class="notification-dropdown" id="notification-dropdown">
                <ul id="notification-list">
                    <li>No new notifications</li>
                </ul>
            </div>
        </div> *@

        <div class="cards">
            <div class="card purple" onclick="navigateToDashboard()" style="cursor: pointer;">Total Stocks<br><strong>@totalStocks</strong></div>            
            <div class="card green" onclick="navigateToAvailabe()" >Available Stocks<br><strong>@availableStocks</strong></div>
            <div class="card red" onclick="navigateToLowStock()">Low Stocks<br><strong>@lowStocks</strong></div>
            <div class="card blue" onclick="navigateToPending()">Pending<br><strong></strong></div>
        </div>

        <!-- Filter Section -->
        <div class="my-4">
            <form method="get" class="d-flex">
                <select name="filterType" class="form-select w-auto" onchange="this.form.submit()">
                    <option value="All" @@(selectedFilter= ="All" ? "selected" : "" )>All</option>
                    <option value="Today" @@(selectedFilter= ="Today" ? "selected" : "" )>Today</option>
                    <option value="Week" @@(selectedFilter= ="Week" ? "selected" : "" )>Last 7 Days</option>
                    <option value="Month" @@(selectedFilter= ="Month" ? "selected" : "" )>Last 30 Days</option>
                </select>
                <!-- Status Filter -->
                <select name="statusFilter" id="statusFilter" class="form-select w-auto ms-2" onchange="this.form.submit()">
                    <option value="All">All</option>
                    <option value="Created">CreateStock</option>
                    <option value="Updated">Updated</option>
                    <option value="Completed">Completed</option>
                    <option value="Approved">Approved</option>
                </select>
            </form>
        </div>


        <!-- Logs Table -->
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model)
                    {
                        <tr>
                            <td>@log.UserName</td>
                            <td>@log.CreatedDate.ToString()</td>
                            <td>@log.Description</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <nav>
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { filterType = selectedFilter, page = i })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>

    <!-- Bootstrap 5 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
<script>

    function toggleNotifications() {
           var dropdown = document.getElementById("notification-dropdown");
           dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
       }

       // Close dropdown when clicking outside
    
        function navigateToDashboard() {
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"All"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToAvailabe() {
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"Available"}&search=${""}`;

        window.location.href = url;
    }
    function navigateToLowStock(){
        const url = `/Inventory/Index?page=${1}&pageSize=${10}&filter=${"red"}&search=${""}`;
        window.location.href = url;
    }
    function navigateToPending(){
            const url = `/Admin/Index?page=${1}&pageSize=${10}&search=${""}&orderDate=${""}&filter=${"Pending"}`;

        window.location.href = url;
    }
</script>
