<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>myaLphabet</title>
    <link rel="icon" type="image/x-icon" href="~/Images/favicon.png">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        /* --- MODERN RESPONSIVE SIDEBAR STYLES --- */
        :root {
            --sidebar-width-collapsed: 80px;
            --header-height: 60px;
            --transition-speed: 0.3s;
        }

        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            overflow-y: hidden; /* Prevents the entire page from scrolling */
        }

        /* Mobile-first sidebar width */
        .offcanvas-start {
            width: 220px;
        }

        .offcanvas-lg.offcanvas-start {
            transition: width var(--transition-speed) ease-in-out;
            border-right: none;
        }

        /* Layout for fixed header/sidebar and scrollable content */
        #main-content {
            height: 100vh;
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        main[role="main"] {
            flex-grow: 1;
            overflow-y: auto; /* Makes only the main content scrollable */
        }

        /* Collapsed state for desktop */
        body.sidebar-collapsed .offcanvas-lg.offcanvas-start {
            width: var(--sidebar-width-collapsed);
        }

        body.sidebar-collapsed .sidebar-text {
            opacity: 0;
            visibility: hidden;
            pointer-events: none;
        }

        body.sidebar-collapsed .sidebar-icon {
            margin-right: 0;
        }

        /* Subtle hover effect for collapsed icons */
        body.sidebar-collapsed .sidebar-nav .nav-link:hover {
            background-color: #343a40;
            border-left: none;
            padding-left: 20px;
        }
        /* Hide logo when sidebar is collapsed */
        body.sidebar-collapsed .sidebar-logo {
            display: none;
        }

        /* Disable hover effect when sidebar is collapsed */
        body.sidebar-collapsed .sidebar-nav .nav-link:hover {
            background-color: transparent !important;
            color: inherit !important;
            border-left: none !important;
            padding-left: 20px !important;
            cursor: default;
        }
        /* General nav link styles */
        .sidebar-nav .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: #adb5bd;
            text-decoration: none;
            transition: background-color 0.2s, color 0.2s, padding-left 0.2s;
            white-space: nowrap;
            overflow: hidden;
        }
            /* Full-width hover for expanded sidebar */
            .sidebar-nav .nav-link:hover {
                background-color: #343a40;
                color: #ffffff;
                border-left: 3px solid #0d6efd;
                padding-left: 17px;
            }

        .sidebar-icon {
            width: 24px;
            text-align: center;
            font-size: 1.1rem;
            margin-right: 1.2rem;
            flex-shrink: 0;
            transition: margin-right var(--transition-speed) ease-in-out;
        }

        .sidebar-text {
            transition: opacity calc(var(--transition-speed) - 0.1s) ease-in-out, visibility 0s linear calc(var(--transition-speed) - 0.1s);
        }

        .main-header {
            height: var(--header-height);
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            z-index: 1020;
            flex-shrink: 0;
        }

        .user-image {
            height: 40px;
            width: 40px;
            object-fit: cover;
        }

        .toggle-btn {
            color: #343a40;
        }

        /* Sidebar Logo Styles */
        .sidebar-logo-area {
            padding: 1.5rem;
            transition: padding var(--transition-speed) ease-in-out;
        }

        .sidebar-logo {
            height: 40px;
            width: auto;
            transition: all var(--transition-speed) ease-in-out;
        }

        body.sidebar-collapsed .sidebar-logo {
            height: 30px;
        }

        body.sidebar-collapsed .sidebar-logo-area {
            padding: 1rem;
        }

        /* Desktop-specific overrides */
        @@media (min-width: 992px) {
            .offcanvas-lg.offcanvas-start {
                width: 280px;
            }
        }

    </style>
</head>
<body class="bg-light">
    <div class="d-flex">
        <div class="offcanvas-lg offcanvas-start text-bg-dark vh-100 flex-shrink-0" tabindex="-1" id="sidebar" aria-labelledby="sidebarLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="sidebarLabel">Menu</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" data-bs-target="#sidebar" aria-label="Close"></button>
            </div>

            <div class="offcanvas-body d-flex flex-column p-0">
                <div class="sidebar-logo-area text-center">
                    <a href="@Url.Action("Index", "StoreKeeper")">
                        <img src="@Url.Content("~/Images/alphabet-logo2.png")" alt="Logo" class="sidebar-logo">
                    </a>
                </div>

                <ul class="nav flex-column sidebar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "StoreKeeper")">
                            <i class="fa-solid fa-table-columns sidebar-icon"></i>
                            <span class="sidebar-text">Dashboard</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Inventory", "StoreKeeper")">
                            <i class="fa-solid fa-boxes-stacked sidebar-icon"></i>
                            <span class="sidebar-text">Inventory</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("ScannerIndex", "StoreKeeper")">
                            <i class="fa-solid fa-barcode sidebar-icon"></i>
                            <span class="sidebar-text">Barcode</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("ApproveList", "StoreKeeper")">
                            <i class="fa-solid fa-check-to-slot sidebar-icon"></i>
                            <span class="sidebar-text">Approve List</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("StationeryCategories", "StoreKeeper")">
                            <i class="fa-solid fa-tags sidebar-icon"></i>
                            <span class="sidebar-text">Categories</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("StationeryLocation", "StoreKeeper")">
                            <i class="fa-solid fa-location-dot sidebar-icon"></i>
                            <span class="sidebar-text">Location</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("UnitTypes", "StoreKeeper")">
                            <i class="fa-solid fa-ruler-combined sidebar-icon"></i>
                            <span class="sidebar-text">Units</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("CreateManual", "StoreKeeper")">
                            <i class="fa-solid fa-clipboard-check sidebar-icon"></i>
                            <span class="sidebar-text">Manual Complete</span>
                        </a>
                    </li>
                </ul>

                <ul class="nav flex-column sidebar-nav mt-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Logout", "Home")">
                            <i class="fa-solid fa-arrow-right-from-bracket sidebar-icon"></i>
                            <span class="sidebar-text">Logout</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <div id="main-content" class="flex-grow-1">
            <header class="main-header bg-white px-3 d-flex align-items-center">
                <button class="btn d-lg-none me-2 toggle-btn" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebar" aria-controls="sidebar">
                    <i class="fa-solid fa-bars"></i>
                </button>
                <button class="btn d-none d-lg-block me-2 toggle-btn" type="button" id="desktop-toggle-btn">
                    <i class="fa-solid fa-bars"></i>
                </button>

               @*  <div class="ms-auto d-flex align-items-center user-info">
                    <img src="@Url.Content("~/Images/default image.jpg")" alt="User Image" class="user-image rounded-circle me-2">
                    <span class="fw-bold">@ViewBag.UserName</span>
                </div> *@
                <div class="ms-auto d-flex align-items-center user-info">
                    @if (!string.IsNullOrEmpty(ViewBag.UserImage as string))
                    {
                        <img src="@Url.Content(ViewBag.UserImage)" alt="User Image" class="user-image me-2" />
                    }
                    else
                    {
                        <div id="user-avatar"
                             style="width:40px;height:40px;color:white;
                                display:flex;align-items:center;justify-content:center;
                                border-radius:50%;font-weight:bold;" class="me-2">
                        </div>
                    }
                    <span id="user-name" class="fw-bold">@ViewBag.UserName</span>
                </div>
            </header>

            <main role="main" class="container-fluid p-4">
                @RenderBody()
            </main>
        </div>
    </div>

    <script>
        const desktopToggleButton = document.getElementById('desktop-toggle-btn');
        if (desktopToggleButton) {
            desktopToggleButton.addEventListener('click', () => {
                document.body.classList.toggle('sidebar-collapsed');
            });
        }
    </script>
    <script>
        const desktopToggleButton = document.getElementById('desktop-toggle-btn');
        if (desktopToggleButton) {
            desktopToggleButton.addEventListener('click', () => {
                document.body.classList.toggle('sidebar-collapsed');
            });
        }

        function getInitials(name) {
            if (!name) return "";
            let words = name.trim().split(/\s+/);
            return words.length === 1 ? words[0][0].toUpperCase() : (words[0][0] + words[words.length - 1][0]).toUpperCase();
        }

        function getColorFromName(name) {
            if (!name) return "#999";
            let hash = 0;
            for (let i = 0; i < name.length; i++) {
                hash = name.charCodeAt(i) + ((hash << 5) - hash);
            }
            let r = (hash & 0xFF0000) >> 16;
            let g = (hash & 0x00FF00) >> 8;
            let b = hash & 0x0000FF;
            return `rgb(${(r % 128) + 64}, ${(g % 128) + 64}, ${(b % 128) + 64})`;
        }

        document.addEventListener("DOMContentLoaded", function () {
            const name = document.getElementById("user-name").textContent.trim();
            const avatarDiv = document.getElementById("user-avatar");

            if (avatarDiv) {
                avatarDiv.textContent = getInitials(name);
                avatarDiv.style.backgroundColor = getColorFromName(name);
            }
        });
    </script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>